
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);// -1 
static const uint8_t jamesharden[1024] = {
     0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xfc, 0x78, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xfc, 0x79, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xbf, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xfc, 0x79, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xa7, 0xff, 
    0xff, 0xdf, 0xff, 0xff, 0xc7, 0xff, 0xc7, 0xfc, 0xf1, 0xff, 0x11, 0x7f, 0xff, 0xff, 0xe7, 0x39, 
    0xff, 0xdf, 0xff, 0x31, 0x8f, 0xff, 0xc7, 0xf8, 0xf1, 0xff, 0x1c, 0x7f, 0xff, 0xff, 0xf8, 0x76, 
    0xff, 0xf1, 0xce, 0x7e, 0x7f, 0xff, 0xc7, 0xf8, 0xf1, 0xfe, 0x3f, 0x7f, 0xff, 0xff, 0xfb, 0x7e, 
    0xff, 0xfc, 0x9b, 0xfe, 0x7f, 0xff, 0xe7, 0xf8, 0xf1, 0xfe, 0x7f, 0x9c, 0xff, 0x9f, 0xf9, 0x7e, 
    0xff, 0xfe, 0xdb, 0xea, 0x7f, 0xff, 0xe3, 0xfc, 0xf1, 0xfc, 0x7f, 0xfe, 0x76, 0x1f, 0xf9, 0x7e, 
    0xff, 0xfe, 0xdb, 0xea, 0x7f, 0xff, 0xe3, 0xfc, 0xf1, 0xfc, 0xff, 0xff, 0xfe, 0xfe, 0x41, 0x7e, 
    0xff, 0xfe, 0x5b, 0xea, 0x7f, 0xfe, 0xe1, 0xfc, 0xf1, 0xf8, 0xff, 0xff, 0xf0, 0x9f, 0xf9, 0x3e, 
    0x7f, 0xfe, 0x5b, 0xeb, 0x7b, 0xf6, 0xf1, 0xfc, 0x71, 0xf8, 0xff, 0xff, 0xf0, 0x9c, 0x39, 0x3e, 
    0xb3, 0xef, 0x7b, 0xeb, 0x77, 0xe7, 0xf8, 0xfe, 0x01, 0xf8, 0xff, 0xc3, 0xff, 0xff, 0xe1, 0xbe, 
    0xfd, 0xdf, 0x7b, 0xea, 0x7f, 0xfc, 0x00, 0xff, 0xff, 0xfd, 0xf0, 0xff, 0xff, 0xff, 0xf9, 0xbe, 
    0xff, 0xff, 0x7b, 0xea, 0x7f, 0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xfe, 0x6c, 0xf9, 0xbe, 
    0x7f, 0xff, 0x6b, 0xfa, 0x60, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xf9, 0xf3, 0x39, 0xbf, 
    0xe6, 0xcf, 0x6f, 0xfa, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1d, 0xff, 0x91, 0xbf, 
    0xcf, 0x30, 0x7f, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xf9, 0xff, 
    0x4f, 0xf2, 0x7b, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xf9, 0xff, 
    0xff, 0xfe, 0x49, 0x0f, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xf9, 0xff, 
    0xff, 0xfe, 0x18, 0x7f, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0x8f, 0xf9, 0xff, 
    0x00, 0xf9, 0x31, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xe3, 0xf9, 0xff, 
    0x04, 0x73, 0xc7, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xf8, 0xfd, 0xbe, 
    0x07, 0xc3, 0x8f, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xfc, 0x7d, 0xbe, 
    0xe7, 0xce, 0x1f, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xfe, 0x3d, 0xbe, 
    0x9c, 0x4c, 0x7f, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0x9d, 0xae, 
    0x1f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcd, 0xaf, 
    0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xaf, 
    0xff, 0xf1, 0xff, 0xff, 0xff, 0xf8, 0xf1, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xe3, 0x2c, 
    0xff, 0xe3, 0xff, 0xff, 0xff, 0xf9, 0xf8, 0xff, 0xff, 0xf1, 0xe7, 0xff, 0xff, 0xff, 0xf1, 0x6c, 
    0xff, 0xe7, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xe3, 0xf3, 0xff, 0xff, 0xff, 0xf8, 0x6e, 
    0xff, 0xc7, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xe0, 0xc3, 0xff, 0xff, 0xff, 0xf8, 0xff, 
    0xff, 0xc7, 0xff, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xf8, 0xff, 
    0xff, 0xcf, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xfc, 0x7f, 
    0xff, 0xcf, 0xff, 0xf3, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x77, 0xff, 0xff, 0xfc, 0x7f, 
    0xff, 0xcf, 0xff, 0xf6, 0x77, 0x7f, 0xff, 0xfe, 0x7f, 0xff, 0xfe, 0xee, 0xef, 0xff, 0xfc, 0x7f, 
    0xff, 0xcf, 0xff, 0xff, 0xef, 0xff, 0xff, 0x7e, 0x7f, 0xff, 0xfd, 0xdd, 0xdf, 0xff, 0xfc, 0x7f, 
    0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1c, 0x3e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 
    0xec, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 
    0x72, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7d, 
    0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 
    0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 
    0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 
    0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 
    0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 
    0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 
    0xfd, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 
    0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 
    0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 
    0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 
    0xdf, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xfd, 0xff, 
    0xde, 0xff, 0xfc, 0x61, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xff, 
    0xfd, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 
    0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 
    0xff, 0xff, 0xf1, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 
    0xff, 0xff, 0xf8, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 
    0xff, 0xff, 0xfc, 0x63, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xc7, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc7, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xc4, 0x3f, 0xfb, 
    0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x8f, 0xff, 0xbb, 
    0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x1f, 0xff, 0xdb, 
    0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3c, 0x1f, 0xff, 
    0xff, 0xfb, 0xbb, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 
    0xff, 0xfd, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xfc, 0x7f, 0xff, 
    0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xbf, 0xff
};
 
void setup() {
  Serial.begin(115200);
 // 0x3C IICµÿ÷∑
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000); // Pause for 2 seconds
 
  // Clear the buffer.
  display.clearDisplay();
  
  // Draw bitmap on the screen
  display.drawBitmap(0, 0, jamesharden, 128, 64, 1);
  display.display();
}
 
void loop() {
  
}
